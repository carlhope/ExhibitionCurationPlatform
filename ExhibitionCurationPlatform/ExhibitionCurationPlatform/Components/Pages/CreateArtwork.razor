@page "/my-artwork/create"
@rendermode InteractiveServer
@attribute [Authorize]
@using ExhibitionCurationPlatform.Models
@using ExhibitionCurationPlatform.Services.Interfaces
@using Microsoft.AspNetCore.Authorization
@inject IArtworkService ArtworkService

<PageTitle>Create Artwork</PageTitle>

<EditForm Model="@artwork" OnValidSubmit="HandleValidSubmit" FormName="CreateArtwork">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="artwork-title" class="form-label">Title</label>
        <InputText id="artwork-title" class="form-control" @bind-Value="artwork.Title" />
    </div>

    <div class="mb-3">
        <label for="artwork-description" class="form-label">Description</label>
        <InputTextArea id="artwork-description" class="form-control" @bind-Value="artwork.Description" />
    </div>

    <div class="mb-3">
        <label for="artwork-artist" class="form-label">Artist</label>
        <InputText id="artwork-artist" class="form-control" @bind-Value="artwork.Artist" />
    </div>

    <div class="mb-3">
        <label for="artwork-image" class="form-label">Image URL</label>
        <InputText id="artwork-image" class="form-control" @bind-Value="artwork.ImageUrl" />
    </div>

    <div class="mb-3">
        <label for="artwork-date" class="form-label">Date</label>
        <InputDate DateFormat="yyyy-MM-dd" id="artwork-date" class="form-control" @bind-Value="artwork.Date" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@if (successMessage != null)
{
    <div class="alert alert-success mt-3">@successMessage</div>
}

@code {
    private Artwork artwork = new();
    private string? successMessage;

    private async Task HandleValidSubmit()
    {
        artwork.CreatedBy = "User"; // Replace with actual user ID
        await ArtworkService.CreateAsync(artwork);
        successMessage = "Artwork submitted successfully!";
        artwork = new(); // Reset form
    }
}
