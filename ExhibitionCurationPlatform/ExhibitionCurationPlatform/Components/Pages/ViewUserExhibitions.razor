@page "/exhibitions"
@using ExhibitionCurationPlatform.Components.UI
@using ExhibitionCurationPlatform.Models
@using ExhibitionCurationPlatform.Services.Interfaces
@inject IExhibitionService ExhibitionService

<PageTitle>Your Exhibitions</PageTitle>

@if (exhibitions == null)
{
    <p>Loading exhibitions...</p>
}
else if (!exhibitions.Any())
{
    <p>No exhibitions found for this curator.</p>
}
else
{
    <div class="exhibition-list">
        @foreach (var exhibition in exhibitions)
        {
            <div class="exhibition-card border rounded p-3 mb-4">
                <div class="card-title h4">@exhibition.Title</div>
                <p>@exhibition.Description</p>
                <p><strong>Scheduled:</strong> @(exhibition.ScheduledDate?.ToShortDateString() ?? "Not scheduled")</p>
                <p><strong>Created:</strong> @exhibition.CreatedAt.ToShortDateString()</p>
                <p><strong>Layout:</strong> @exhibition.Layout</p>
                <p><strong>Theme:</strong> @exhibition.Theme</p>
                <p><strong>Artworks:</strong> @exhibition.Artworks.Count</p>

                @if (exhibition.Artworks?.Any() == true)
                {
                    <div class="artwork-list row row-cols-1 row-cols-lg-2 row-cols-xxl-3 g-3">
                        @foreach (var artwork in exhibition.Artworks)
                        {
                            <div class="col">
                               <ArtworkCard Artwork="artwork" />
                            </div>
                        }
                    </div>
                }
            </div>
        }
    </div>
}

@code {
    private List<Exhibition> exhibitions;

    protected override async Task OnInitializedAsync()
    {
        
        var curator = "User"; // Placeholder until Identity is wired in
        exhibitions = await ExhibitionService.GetExhibitionsByCuratorAsync(curator);
    }
}
